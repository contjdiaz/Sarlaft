@model WebMVC.Models.ValidarIngresoViewModel

@{
    ViewBag.Title = "ValidarIngreso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-container">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" align="center">
                <div class="titulo_seccion">Validar ingreso</div>
                <br />
                <div class="login-body">

                    @using (Html.BeginForm("ValidarIngreso", "ValidarIngresoUsuario", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoPersona, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(m => m.CodigoTipoPersona, (SelectList)ViewBag.ListaTipoPersona, new { @class = "form-control", @id = "ddlTipoPersona" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TipoDocumento, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(m => m.CodigoTipoDocumento, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @id = "ddlTipoDoc" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Documento, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Documento, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Documento, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" class="btn btn-icetex">Ingresar</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript">

        $(document).ready(function () {

            if ($("#ddlTipoPersona").val() != "") {
               TipoDocumento($('#ddlTipoPersona').val());
            }

        });

        $(function () {
            $('#ddlTipoPersona').change(function () {
                $('#ddlTipoDoc').empty();
                TipoDocumento($('#ddlTipoPersona').val());
                return false;
            })

        });

        function TipoDocumento(tipoPersona) {
    
            $.ajax({
                type: 'POST',
                url: "/ValidarIngresoUsuario/ObtenerTipoDocPorTipoPersona",
                dataType: 'json',
                data: { codigoTipoPersona: tipoPersona },
                success: function (tipoDocs) {
                    $.each(tipoDocs, function (i, tipoDoc) {
                        $("#ddlTipoDoc").append('<option value="' + tipoDoc.Value + '">' +
                            tipoDoc.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Error: ' + ex);
                }
            });
        }
    </script>
}
