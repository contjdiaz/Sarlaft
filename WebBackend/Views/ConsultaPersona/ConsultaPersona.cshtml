@using GridMvc.Html
@model WebBackend.Models.ConsultaPersonaViewModel
@{
	ViewBag.Title = "Consultas";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("ConsultaPersona", "ConsultaPersona", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
	@Html.AntiForgeryToken()


	<div class="x_panel">

		<div class="row">
			<div class="form-group">
				<div class="col-md-3">
					<label>Tipo persona</label>
					@Html.DropDownListFor(model => model.CODIGO_TIPO_PERSONA, (SelectList)ViewBag.ListaTipoPersona, "Seleccione un valor", new { @class = "form-control" })

				</div>
				<div class="col-md-3">
					<label>Tipo documento</label>
					@Html.DropDownListFor(model => model.CODIGO_TIPO_DOCUMENTO, (SelectList)Model.ListaTipoDocumento, new { @class = "form-control" })

				</div>
				<div class="col-md-3">
					<label>Documento</label>
					@Html.EditorFor(model => model.NUMERO_DOCUMENTO, new { htmlAttributes = new { @class = "form-control" } })

				</div>
				<div class="col-md-3">
					<br />
					<button type="submit" class="btn btn-icetex">Buscar</button>				
				</div>
			</div>

		</div>
		<br />
		
		<div class="row">
			@Html.Grid(Model.ListaPersonas).Columns(columns =>
	   {
	   columns.Add(p => p.NOMBRE_TIPO_PERSONA).Titled("Tipo persona").SetWidth(80);
	   columns.Add(p => p.NOMBRE).Titled("Nombre/Razón social").SetWidth(200);
	   columns.Add(p => p.NOMBRE_TIPO_DOCUMENTO).Titled("Tipo Documento").SetWidth(50);
	   columns.Add(p => p.NUMERO_DOCUMENTO).Titled("Documento").SetWidth(80);
	   columns.Add(p => p.LISTA_CLINTON).Titled("Lista Clinton").SetWidth(20);
	   //columns.Add(p => p.ID_PERSONA).Titled("ID_PERSONA").SetWidth(20);
	   columns.Add()
   .Encoded(false)
   .Sanitized(false)
   .SetWidth(30)
   .RenderValueAs(p =>

		@<b>
			@if (p.CODIGO_TIPO_PERSONA == "PN")
			{
				@Html.ActionLink("Ver", "PersonaNatural", "PersonaNatural", new { idPersona = p.ID_PERSONA }, null)
			}
			else
			{
				@Html.ActionLink("Ver", "PersonaJuridica", "PersonaJuridica", new { idPersona = p.ID_PERSONA }, null)
			}



		</b>);
	   }).WithPaging(5)
		
		</div>

	</div>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")


	<script type="text/javascript">

		$(document).ready(function () {
			if ($('#CODIGO_TIPO_PERSONA').val() != "") TipoDocumento($('#CODIGO_TIPO_PERSONA').val());		
		});

        $(function () {
			$('#CODIGO_TIPO_PERSONA').change(function () {
				$('#CODIGO_TIPO_DOCUMENTO').empty();
				TipoDocumento($('#CODIGO_TIPO_PERSONA').val());
                return false;
            })

        });

        function TipoDocumento(tipoPersona) {

            $.ajax({
                type: 'POST',
                url: "/ConsultaPersona/ObtenerTipoDocPorTipoPersona",
                dataType: 'json',
                data: { codigoTipoPersona: tipoPersona },
                success: function (tipoDocs) {
                    $.each(tipoDocs, function (i, tipoDoc) {
						$("#CODIGO_TIPO_DOCUMENTO").append('<option value="' + tipoDoc.Value + '">' +
                            tipoDoc.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Error: ' + ex);
                }
            });
		}

	</script>
}




